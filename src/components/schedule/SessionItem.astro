---
import type { Category, Session, Speaker } from '../../type'
import Chip from '../ui-elements/Chip.astro'
import Cluster from '../ui-elements/Cluster.astro'
import Stack from '../ui-elements/Stack.astro'

interface Props {
    session: Session & { speakers?: Speaker[]; category?: Category }
}

const { session } = Astro.props
---

<a href={`/sessions/${session.id}`} class="schedule-session">
    <Stack style={{ height: '100%' }} space="var(--s-2)">
        <h3 class="fw-medium fs1">{session.title}</h3>
        {session.abstract && <p class="schedule-session-abstract">{session.abstract}</p>}
        {
            session.category && (
                <div>
                    <Chip color={session.category.color} size="sm">
                        {session.category.name}
                    </Chip>
                </div>
            )
        }
        {
            session.speakers && session.speakers.length > 0 && (
                <div style={{ marginTop: 'auto', paddingTop: 'var(--s0)' }}>
                    <Cluster>
                        {session.speakers.map((speaker) => (
                            <Cluster space="var(--s-3) var(--s-2)" nowrap>
                                <img
                                    alt=""
                                    src={speaker.photoUrl || undefined}
                                    width="20"
                                    height="20"
                                    style={{ borderRadius: '50%' }}
                                />
                                <div>
                                    <div style={{ lineHeight: 1.2 }}>{speaker.name}</div>
                                    <div style={{ lineHeight: 1.2, fontSize: '0.675em' }}>{speaker.company}</div>
                                </div>
                            </Cluster>
                        ))}
                    </Cluster>
                </div>
            )
        }
    </Stack>
</a>

<style>
    .schedule-session {
        display: block;
        text-decoration: none;
        color: var(--text);
        background-color: var(--background);
        border-radius: var(--s-3);
        border: 1px solid var(--line);
        padding: var(--s0);
        overflow: hidden;
        width: 100%;
        height: 100%;
        transition: all var(--animation);

        &:hover {
            background-color: var(--component);
            border-color: var(--border);
        }
    }

    .schedule-session-abstract {
        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 3;
        overflow: hidden;
        margin: 0;
    }
</style>
