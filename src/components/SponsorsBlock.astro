---
import type { OpenPlannerType } from '../type'
interface Props {
    sponsorCategories: OpenPlannerType['sponsors']
}

const { sponsorCategories } = Astro.props

const sponsorsCategoriesSorted = sponsorCategories.sort((a, b) => a.order - b.order)
---

<div class="container">
    <h2>Sponsors de l'Ã©dition 2024</h2>

    <a class="become" href="https://sunny-tech.io/sponsoring" target="_blank" rel="noopener noreferrer">
        Devenez sponsor de Sunny Tech !
        <span
            ><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"
                ><title>arrow-right-bold-circle</title><path
                    d="M2,12A10,10 0 0,1 12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12M17,12L12,7V10H8V14H12V17L17,12Z"
                ></path></svg
            ></span
        >
    </a>

    {
        sponsorsCategoriesSorted.map(
            (sponsorCategory: { name: string; sponsors: { website: string; name: string; logoUrl: string }[] }) => (
                <div class="block">
                    <h4 class="block-title">{sponsorCategory.name}</h4>
                    <div class="logos-wrapper">
                        {sponsorCategory.sponsors.map((sponsor: { website: string; name: string; logoUrl: string }) => (
                            <a
                                class="logo-item"
                                href={sponsor.website}
                                title={sponsor.name}
                                target="_blank"
                                rel="noopener noreferrer">
                                <img class="logo-img" src={sponsor.logoUrl} alt={sponsor.name} loading="lazy" />
                            </a>
                        ))}
                    </div>
                </div>
            )
        )
    }
</div>

<style>
    .container {
        max-width: var(--max-container-width);
        margin: 20px auto;
    }

    h2 {
        font-weight: 500;
        font-size: 32px;
        margin-bottom: 20px;
    }

    h4 {
        font-weight: 500;
        font-size: 24px;
        margin-bottom: 10px;
    }

    a.become {
        color: var(--default-primary-color);
        text-decoration: none;
        padding: 8px 16px;
        font-weight: 600;
        text-transform: uppercase;
        border-radius: 4px;
        transition: all var(--animation);
        margin-bottom: 20px;
        display: flex;
        align-items: center;
        width: fit-content;
    }

    a.become svg {
        margin-left: 8px;
        width: 16px;
        height: 16px;
        fill: var(--default-primary-color);
    }

    a.become:hover {
        background-color: var(--default-primary-color);
        color: #fff;
        svg {
            fill: #fff;
        }
    }

    .block {
        margin-bottom: 40px;
    }

    .logos-wrapper {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
        gap: 8px;
    }

    .logo-item {
        padding: 12px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
        border-radius: 4px;
    }

    .logo-img {
        width: 100%;
        height: 84px;
        object-fit: contain;
    }

    @media (min-width: 640px) {
        .logos-wrapper {
            grid-template-columns: repeat(4, 1fr);
        }
    }
</style>
