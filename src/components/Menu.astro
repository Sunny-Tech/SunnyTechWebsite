---
const FAQ_LINK = 'https://www.sunny-tech.io/faq'

const navigation = [
    { label: 'Team', route: '/team' },
    { label: 'Tarifs', route: '/#tickets' },
    { label: 'Code de conduite', route: '/coc' },
    { label: 'Lieu', route: '/location' },
    { label: 'Blog', route: '/blog' },
    { label: 'FAQ', route: FAQ_LINK },
]

const routeName = Astro.url.pathname

const isActiveRoute = (route: string) => {
    if (route === '/') {
        return route === routeName
    }

    return routeName.startsWith(route)
}
---

<header id="site-header" class:list={['header-toolbar']} data-transparent="true">
    <div class="header">
        <div class="logo-container">
            {routeName === '/' && <span class="toolbar-logo" />}
            {routeName !== '/' && <a href="/" class="toolbar-logo" aria-label="Retour Ã  la page d'accueil" />}
        </div>

        <nav class="nav-items">
            {
                navigation.map((nav) => (
                    <a href={nav.route} class:list={['nav-item', { active: isActiveRoute(nav.route) }]}>
                        {nav.label}
                    </a>
                ))
            }
        </nav>

        <input type="checkbox" id="nav-trigger" class="nav-trigger" />
        <label id="nav-trigger-label" for="nav-trigger" aria-label="Ouvrir/fermer le menu de navigation">
            <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24">
                <path fill="currentColor" d="M3 6h18v2H3zm0 5h18v2H3zm0 5h18v2H3z"></path>
            </svg>
        </label>
        <div class="nav-drawer">
            {
                (
                    <nav class="nav-items">
                        {navigation.map((nav) => (
                            <a href={nav.route} class:list={['nav-item', { active: isActiveRoute(nav.route) }]}>
                                {nav.label}
                            </a>
                        ))}
                    </nav>
                )
            }
        </div>
    </div>
</header>

<script>
    window.addEventListener('scroll', () => {
        const header: HTMLElement | null = document.querySelector('#site-header')

        if (header) {
            header.dataset.transparent = (document.documentElement.scrollTop === 0).toString()
        }
    })

    const navTriggerLabel = document.querySelector('#nav-trigger-label') as HTMLInputElement | null

    if (navTriggerLabel) {
        navTriggerLabel.ariaLabel = 'Ouvrir le menu de navigation'

        document.querySelector('#nav-trigger')?.addEventListener('change', (event) => {
            const target = event.target as HTMLInputElement

            if (target.checked) {
                navTriggerLabel.ariaLabel = 'Fermer le menu de navigation'
            } else {
                navTriggerLabel.ariaLabel = 'Ouvrir le menu de navigation'
            }
        })
    }
</script>

<style>
    .header-toolbar {
        z-index: 2;
        border-bottom: 1px solid var(--border);
        background-color: var(--background);
        transition:
            background-color var(--animation),
            border-bottom-color var(--animation),
            color var(--animation);
        color: var(--hero-text-color, var(--text));
        position: sticky;
        top: 0;
        left: 0;
        right: 0;

        &[data-transparent='true'] {
            border-bottom: 0;
            background-color: transparent;
        }
    }

    .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        max-width: var(--max-container-width);
        margin: 0 auto;
        padding: 0.4rem 1rem;
        min-height: 4rem;
    }

    .toolbar-logo {
        display: block;
        width: 3rem;
        height: 2rem;
        background-color: var(--brand-solid);
        transition: background-color var(--animation);
        mask: url('/logos-sunnytech/logo-monochrome.svg') no-repeat;
        mask-size: contain;
    }

    .nav-items {
        display: none;

        @media (min-width: 740px) {
            display: flex;
            gap: 0.25rem;
        }
    }

    .nav-item {
        font-size: 0.875rem;
        padding: 0.5rem 1rem;
        text-transform: uppercase;
        text-decoration: none;
        color: inherit;
        white-space: nowrap;
        transition: border-color var(--animation);
        cursor: pointer;
        font-weight: 600;
        border-bottom: 2px solid transparent;

        &:hover {
            border-bottom-color: var(--brand-solid);
        }

        &.active {
            color: var(--brand-solid) !important;
            border-bottom-color: var(--brand-solid) !important;
            font-weight: 700;
        }

        @media (min-width: 740px) {
            padding: 0.75rem 0.875rem;
            font-size: var(--fs0);
        }
    }

    .nav-trigger {
        position: absolute;
        clip: rect(0, 0, 0, 0);

        @media (min-width: 740px) {
            display: none;
        }
    }

    label[for='nav-trigger'] {
        width: 1.5rem;
        height: 1.5rem;
        cursor: pointer;
        position: relative;
        z-index: 1100;
        border-radius: 0.25rem;

        .nav-trigger:focus-visible + & {
            box-shadow: 0 0 0 2px currentcolor;
        }

        @media (min-width: 740px) {
            display: none;
        }
    }

    .nav-drawer {
        position: fixed;
        z-index: 1000;
        right: -200px;
        background-color: var(--nav-drawer-bg-color, rgba(255, 255, 255, 0.9));
        overflow-y: auto;
        transition: right var(--slide-animation);

        .nav-trigger:checked ~ & {
            right: 0;
            bottom: 0;
            top: 0;
            padding: 3.75rem 2rem;

            .nav-items {
                display: flex;
                flex-direction: column;
                align-items: flex-start;
                gap: 0.5rem;
            }

            .nav-item {
                padding: 0.75rem 0.75rem 0.75rem 0;
            }
        }

        @media (min-width: 740px) {
            display: none;
        }
    }

    .logo-container {
        display: flex;
        align-items: center;
        justify-content: center;

        &:focus-within {
            border-radius: 2px;
            outline: 2px solid var(--brand-solid);
            outline-offset: 2px;
        }
    }
</style>
